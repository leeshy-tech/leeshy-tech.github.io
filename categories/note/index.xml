<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Note - 分类 - Leeshy&#39;s Blog | To be humble</title>
        <link>https://leeshy-tech.github.io/categories/note/</link>
        <description>Note - 分类 - Leeshy&#39;s Blog | To be humble</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>saili@bupt.edu.cn (Leeshy)</managingEditor>
            <webMaster>saili@bupt.edu.cn (Leeshy)</webMaster><lastBuildDate>Tue, 14 Jun 2022 14:58:06 &#43;0800</lastBuildDate><atom:link href="https://leeshy-tech.github.io/categories/note/" rel="self" type="application/rss+xml" /><item>
    <title>git使用笔记——commit格式</title>
    <link>https://leeshy-tech.github.io/git_commit_format/</link>
    <pubDate>Tue, 14 Jun 2022 14:58:06 &#43;0800</pubDate><author>saili@bupt.edu.cn (Leeshy)</author><guid>https://leeshy-tech.github.io/git_commit_format/</guid>
    <description><![CDATA[<blockquote>
<p>起因是看到了三位大佬的工程https://github.com/Direktor799/rusted_os/commits/main，非常的赏心悦目，才知道commit也有固定的格式</p>
</blockquote>
<p>Commit Message格式，目前规范使用较多的是 <a href="https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines" target="_blank" rel="noopener noreffer">Angular 团队的规范</a>, 继而衍生了 <a href="https://www.conventionalcommits.org/en/v1.0.0/" target="_blank" rel="noopener noreffer">Conventional Commits specification</a>. 很多工具也是基于此规范, 它的 message 格式如下:</p>
<p>Commit格式包含三个部分，Header、Body、Footer</p>
<pre tabindex="0"><code>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;
&lt;BLANK LINE&gt;
&lt;body&gt;
&lt;BLANK LINE&gt;
&lt;footer&gt;
</code></pre><ul>
<li>首行header：必填，描述修改类型和内容
<ul>
<li>scope：commit影响的范围</li>
<li>subject：commit的概述</li>
</ul>
</li>
<li>body：commit具体修改的内容</li>
<li>footer：备注，通常是 BREAKING CHANGE 或修复的 bug 的链接.</li>
</ul>
<h3 id="header">Header</h3>
<p>Header只有一行，包括三个字段<code>type</code>（必填）<code>scope</code>（可选）<code>subject</code>（必填）</p>
<h4 id="type">type</h4>
<p>说明commit的类别</p>
<ul>
<li>feat：新增功能</li>
<li>fix：bug 修复</li>
<li>docs：文档更新</li>
<li>style：不影响程序逻辑的代码修改(修改空白字符，格式缩进，补全缺失的分号等，没有改变代码逻辑)</li>
<li>refactor：重构代码(既没有新增功能，也没有修复 bug)</li>
<li>perf：性能, 体验优化</li>
<li>test：新增测试用例或是更新现有测试</li>
<li>build：主要目的是修改项目构建系统(例如 glup，webpack，rollup 的配置等)的提交</li>
<li>ci：主要目的是修改项目继续集成流程(例如 Travis，Jenkins，GitLab CI，Circle等)的提交</li>
<li>chore：不属于以上类型的其他类，比如构建流程, 依赖管理</li>
<li>revert：回滚某个更早之前的提交</li>
</ul>
<h4 id="scope">scope</h4>
<p>说明commit影响的范围，比如文件或者逻辑层。</p>
<h4 id="subject">subject</h4>
<p>commit简述</p>
<ul>
<li>以动词开头，使用第一人称现在时，比如<code>change</code>，而不是<code>changed</code>或<code>changes</code></li>
<li>第一个字母小写</li>
<li>结尾不加句号（<code>.</code>）</li>
</ul>
<h3 id="body">Body</h3>
<p>commit详细描述</p>
<h3 id="footer">Footer</h3>
<p>只用于两种情况</p>
<ol>
<li>不兼容变动</li>
<li>关闭Issue</li>
</ol>
]]></description>
</item>
<item>
    <title>OVS命令笔记</title>
    <link>https://leeshy-tech.github.io/ovs_cli/</link>
    <pubDate>Fri, 07 Jan 2022 16:08:06 &#43;0800</pubDate><author>saili@bupt.edu.cn (Leeshy)</author><guid>https://leeshy-tech.github.io/ovs_cli/</guid>
    <description><![CDATA[<h2 id="查看信息">查看信息</h2>
<p>查看openvswitch的状态：<code>ovs-vsctl show</code><br>
查看openvswitch中的所有网桥：<code>ovs-vsctl list-br</code><br>
查看网桥的信息：<code>ovs-ofctl show br0</code>  <br>
查看网桥中的所有端口：<code>ovs-vsctl list-ports br0</code><br>
查看网桥各端口状态：<code>ovs-ofctl dump-ports br0</code><br>
查看网桥上的流表：<code>ovs-ofctl dump-flows br0</code> <br>
查看网桥故障模式：<code>ovs-vsctl get-fail-mode br0</code>  <br>
查看网桥是否开启stp协议：<code>ovs-vsctl get bridge br0 stp_enable</code><br>
查看网桥所有配置信息：<code>ovs-vsctl list bridge br0</code> <br>
查看端口所有特性信息：<code>ovs-vsctl list port br0 port1 </code></p>
<h2 id="网桥操作">网桥操作</h2>
<p>添加网桥：<code>ovs-vsctl add-br br0</code> <br>
删除网桥：<code>ovs-vsctl del-br br0</code> <br>
将网桥连接到控制器：<code>ovs-vsctl set-controller br0 tcp:&lt;controller IP&gt;:&lt;port&gt;</code><br>
设置网桥的故障模式：<code>ovs-vsctl set-fail-mode br0 &lt;secure or standalone&gt; </code><br>
给网桥开启stp协议：<code>ovs-vsctl set bridge br0 stp_enable=true</code></p>
<h2 id="端口操作">端口操作</h2>
<p>增加端口：<code>ovs-vsctl add-port br0 port1</code><br>
删除端口：<code>ovs-vsctl del-port br0 port1</code> <br>
设置端口号：<code>ovs-vsctl set Interface port1 ofport_request=&lt;number&gt;</code> <br>
设置端口类型：<code>ovs-vsctl set Interface p4 type=&lt;type&gt;</code>    </p>
<table>
<thead>
<tr>
<th>端口类型</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>Normal</td>
<td>普通端口</td>
</tr>
<tr>
<td>Internal</td>
<td>这个端口相当于一个虚拟网卡</td>
</tr>
<tr>
<td>Patch</td>
<td>用于连接两个网桥的端口</td>
</tr>
<tr>
<td>Tunne</td>
<td>隧道端口是一种虚拟端口，支持使用gre或vxlan等隧道技术与位于网络上其他位置的远程端口通讯。</td>
</tr>
</tbody>
</table>
<h2 id="网卡操作">网卡操作</h2>
<p>将物理网卡挂接到网桥：<code>ovs-vsctl add-port br0 eth0</code><br>
列出所有挂接到网卡的网桥：<code>ovs-vsctl port-to-br eth0</code><br>
删除网桥上已经挂接的网卡：<code>ovs-vsctl del-port br0 eth0</code></p>
<h2 id="流表操作">流表操作</h2>
<p>添加流表：<code>ovs-ofctl add-flow br0 &lt;match&gt;,&lt;action&gt;</code>   <br>
删除流表：<code>ovs-ofctl del-flows br0 &lt;match&gt;</code></p>
<h3 id="流表动作-action">流表动作 action</h3>
<p>从端口转发：<code>actions=output:&lt;number&gt;</code>  <br>
丢弃数据包：<code>actions=drop</code><br>
广播：<code>actions=NORMAL</code></p>
<h3 id="匹配项-match">匹配项 match</h3>
<p>如有多个匹配项，之间用逗号隔开。  </p>
<table>
<thead>
<tr>
<th>匹配项</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>in_port=port</td>
<td>网桥端口号</td>
</tr>
<tr>
<td>dl_vlan=vlan</td>
<td>数据包的 VLAN Tag 值</td>
</tr>
<tr>
<td>dl_vlan_pcp=priority</td>
<td>VLAN 优先级，改值取值区间为[0-7]。数字越大，优先级越高。</td>
</tr>
<tr>
<td>dl_src=<!-- raw HTML omitted -->,dl_dst=<!-- raw HTML omitted --></td>
<td>匹配源或者目标的 MAC 地址</td>
</tr>
<tr>
<td>dl_type=ethertype</td>
<td>匹配以太网协议类型 ,IPv4:0x0800,IPv6:0x086dd,ARP:0x0806</td>
</tr>
<tr>
<td>nw_src=<!-- raw HTML omitted -->,nw_dst=<!-- raw HTML omitted --></td>
<td>匹配源或目的IP，前提要设定dl_type</td>
</tr>
<tr>
<td>table=number</td>
<td>指定流表编号</td>
</tr>
<tr>
<td>reg<!-- raw HTML omitted -->=value[/mask]</td>
<td>网桥中寄存器的值</td>
</tr>
<tr>
<td>tp_src=number,tp_dst=number</td>
<td>TCP协议源或目的端口</td>
</tr>
</tbody>
</table>
<h2 id="参考文献">参考文献</h2>
<p><a href="https://www.cnblogs.com/goldsunshine/p/11527928.html" target="_blank" rel="noopener noreffer">OpenvSwitch系列</a></p>
]]></description>
</item>
</channel>
</rss>
