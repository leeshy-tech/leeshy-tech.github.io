<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>pyjwt - 标签 - Leeshy&#39;s Blog | To be humble</title>
        <link>https://leeshy-tech.github.io/tags/pyjwt/</link>
        <description>pyjwt - 标签 - Leeshy&#39;s Blog | To be humble</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>saili@bupt.edu.cn (Leeshy)</managingEditor>
            <webMaster>saili@bupt.edu.cn (Leeshy)</webMaster><lastBuildDate>Sun, 20 Feb 2022 20:11:06 &#43;0800</lastBuildDate><atom:link href="https://leeshy-tech.github.io/tags/pyjwt/" rel="self" type="application/rss+xml" /><item>
    <title>Python实践——后端接口实现(2)</title>
    <link>https://leeshy-tech.github.io/pythonapi_simplelogin2/</link>
    <pubDate>Sun, 20 Feb 2022 20:11:06 &#43;0800</pubDate><author>saili@bupt.edu.cn (Leeshy)</author><guid>https://leeshy-tech.github.io/pythonapi_simplelogin2/</guid>
    <description><![CDATA[<h1 id="增加token验证">增加token验证</h1>
<p>书接上文</p>
<h2 id="token是什么">token是什么</h2>
<p>简单来说，token可以认为是身份令牌，当用户登陆成功之后，获得这个令牌，当需要向服务器请求一些私密资源时，便可以提交这个令牌，以证明自己是合法用户。</p>
<h2 id="token生成及解析">token生成及解析</h2>
<p>使用pyjwt这个库：<code>pip install pyjwt</code></p>
<h3 id="核心代码">核心代码：</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">jwt</span>
<span class="c1"># 加密算法</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s2">&#34;alg&#34;</span><span class="p">:</span><span class="s2">&#34;HS256&#34;</span><span class="p">,</span>
    <span class="s2">&#34;typ&#34;</span><span class="p">:</span><span class="s2">&#34;JWT&#34;</span>
<span class="p">}</span>
<span class="c1"># 密钥</span>
<span class="n">SECRET_KEY</span> <span class="o">=</span> <span class="s2">&#34;leeshy&#34;</span>
<span class="s1">&#39;&#39;&#39;生成一个token&#39;&#39;&#39;</span>
<span class="k">def</span> <span class="nf">token_encode</span><span class="p">(</span><span class="n">user_id</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">str</span><span class="p">:</span>
    <span class="k">if</span> <span class="n">user_id</span><span class="p">:</span>
        <span class="n">payload</span> <span class="o">=</span> <span class="p">{</span>
            <span class="s2">&#34;user_id&#34;</span><span class="p">:</span><span class="n">user_id</span>
        <span class="p">}</span>
        <span class="n">token</span> <span class="o">=</span> <span class="n">jwt</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="n">payload</span><span class="o">=</span><span class="n">payload</span><span class="p">,</span> <span class="n">key</span><span class="o">=</span><span class="n">SECRET_KEY</span><span class="p">,</span><span class="n">algorithm</span><span class="o">=</span><span class="s1">&#39;HS256&#39;</span><span class="p">,</span><span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">token</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="kc">None</span>

<span class="s1">&#39;&#39;&#39;解码token&#39;&#39;&#39;</span>
<span class="k">def</span> <span class="nf">token_decode</span><span class="p">(</span><span class="n">token</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">str</span><span class="p">:</span>
    <span class="n">payload</span> <span class="o">=</span> <span class="n">jwt</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="n">jwt</span><span class="o">=</span><span class="n">token</span><span class="p">,</span><span class="n">key</span><span class="o">=</span><span class="n">SECRET_KEY</span><span class="p">,</span><span class="n">verify</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span><span class="n">algorithms</span><span class="o">=</span><span class="s1">&#39;HS256&#39;</span><span class="p">)</span>
    <span class="n">info</span> <span class="o">=</span> <span class="n">payload</span><span class="p">[</span><span class="s2">&#34;user_id&#34;</span><span class="p">]</span>
    <span class="k">return</span> <span class="n">info</span>
</code></pre></div><ul>
<li>headers声明加密算法</li>
<li>SECRET_KEY密钥是编码解码的关键</li>
<li>payload项中，有一些官方声明项，除官方声明项外还可以存一些自定义信息。</li>
</ul>
<h2 id="用户登陆">用户登陆</h2>
<p>如果登陆成功，就返回信息和token，如果不成功，就只返回提示信息。</p>
<p>较上一个版本只有一点改变，核心代码：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="s1">&#39;&#39;&#39;生成一个返回体&#39;&#39;&#39;</span>
<span class="k">def</span> <span class="nf">response_body_login</span><span class="p">(</span><span class="n">msg</span><span class="p">,</span><span class="n">user_id</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
    <span class="n">response_msg</span> <span class="o">=</span> <span class="p">{</span>
        <span class="s2">&#34;msg&#34;</span><span class="p">:</span><span class="n">msg</span><span class="p">,</span>
        <span class="s2">&#34;token&#34;</span><span class="p">:</span><span class="n">token_encode</span><span class="p">(</span><span class="n">user_id</span><span class="p">)</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">jsonify</span><span class="p">(</span><span class="n">response_msg</span><span class="p">)</span>

<span class="nd">@app</span><span class="o">.</span><span class="n">route</span><span class="p">(</span><span class="s1">&#39;/users/login&#39;</span><span class="p">,</span><span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;POST&#39;</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">users_login</span><span class="p">():</span>
    <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">method</span> <span class="o">==</span> <span class="s2">&#34;POST&#34;</span><span class="p">:</span>
        <span class="n">user_id</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">json</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&#34;user_id&#34;</span><span class="p">)</span>
        <span class="n">user_password</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">json</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&#34;user_password&#34;</span><span class="p">)</span>

        <span class="k">for</span> <span class="n">user_dict</span> <span class="ow">in</span> <span class="n">users_list</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">user_dict</span><span class="p">[</span><span class="s2">&#34;user_id&#34;</span><span class="p">]</span> <span class="o">==</span> <span class="n">user_id</span><span class="p">:</span>
                <span class="k">if</span> <span class="n">user_dict</span><span class="p">[</span><span class="s2">&#34;user_password&#34;</span><span class="p">]</span> <span class="o">==</span> <span class="n">user_password</span><span class="p">:</span>
                    <span class="k">return</span> <span class="n">response_body_login</span><span class="p">(</span><span class="s2">&#34;success&#34;</span><span class="p">,</span><span class="n">user_id</span><span class="p">)</span>
                <span class="k">else</span><span class="p">:</span> 
                    <span class="k">return</span> <span class="n">response_body_login</span><span class="p">(</span><span class="s2">&#34;password error&#34;</span><span class="p">)</span>

        <span class="k">return</span> <span class="n">response_body_login</span><span class="p">(</span><span class="s2">&#34;id not exist&#34;</span><span class="p">)</span>
</code></pre></div><ul>
<li>规定的请求体格式是application/json</li>
</ul>
<h2 id="请求用户信息">请求用户信息</h2>
<p>用户向服务端提供token，验证成功则返回用户头像的url。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nd">@app</span><span class="o">.</span><span class="n">route</span><span class="p">(</span><span class="s1">&#39;/users/info&#39;</span><span class="p">,</span><span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;POST&#39;</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">users_info</span><span class="p">():</span>
    <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">method</span> <span class="o">==</span> <span class="s2">&#34;POST&#34;</span><span class="p">:</span>
        <span class="n">token</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">headers</span><span class="p">[</span><span class="s2">&#34;token&#34;</span><span class="p">]</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">user_id</span> <span class="o">=</span> <span class="n">token_decode</span><span class="p">(</span><span class="n">token</span><span class="p">)</span>
        <span class="k">except</span><span class="p">:</span>
            <span class="k">return</span> <span class="s2">&#34;token error&#34;</span>

        <span class="k">for</span> <span class="n">user_dict</span> <span class="ow">in</span> <span class="n">users_headphotos</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">user_dict</span><span class="p">[</span><span class="s2">&#34;user_id&#34;</span><span class="p">]</span> <span class="o">==</span> <span class="n">user_id</span><span class="p">:</span>
                <span class="k">return</span> <span class="n">user_dict</span><span class="p">[</span><span class="s2">&#34;user_headphoto&#34;</span><span class="p">]</span>

        <span class="k">return</span> <span class="s2">&#34;no headphoto&#34;</span>
</code></pre></div><ul>
<li>token要放在请求头里，所以通过request.headers取得。</li>
</ul>
<h2 id="请求体格式">请求体格式</h2>
<p>在前端向后端发送请求时，必须在请求头部分声明请求体格式。</p>
<p>例如：<code>connection.setRequestProperty(&quot;Content-Type&quot;,&quot;application/json;charset=utf-8&quot;);</code></p>
<p>这个格式是由后端决定的，否则后端无法取到对应的信息。</p>
<h3 id="applicationx-www-form-urlencoded">application/x-www-form-urlencoded</h3>
<p>这是最常见的 POST 提交数据的方式，提交时按照键值对<code>key1=val1&amp;key2=val2</code>的方式进行编码。</p>
<p>版本1时，就使用了这种方法调试，所以后端代码对应的是：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">user_id</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">form</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&#34;user_id&#34;</span><span class="p">)</span>
<span class="n">user_password</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">form</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&#34;user_password&#34;</span><span class="p">)</span>
</code></pre></div><h3 id="applicationjson">application/json</h3>
<p>指示服务端消息主体是序列化的JSON字符串。</p>
<p>本次使用的调试方式是json，所以后端代码对应：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">user_id</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">json</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&#34;user_id&#34;</span><span class="p">)</span>
<span class="n">user_password</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">json</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&#34;user_password&#34;</span><span class="p">)</span>
</code></pre></div><h2 id="调试">调试</h2>
<p></p>
<p></p>
<h2 id="结束语">结束语</h2>
<h3 id="源码">源码</h3>
<p><a href="https://github.com/leeshy-tech/API_userLogin" target="_blank" rel="noopener noreffer">https://github.com/leeshy-tech/API_userLogin</a></p>
<h3 id="参考文献">参考文献</h3>
<p><a href="https://www.cnblogs.com/wbl001/p/12050751.html" target="_blank" rel="noopener noreffer">【记录】form-data与x-www-form-urlencoded的区别 </a></p>
]]></description>
</item>
</channel>
</rss>
